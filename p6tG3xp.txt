local function checkUIS(time) -- I aint know why i put it in a  function but okay :).
    task.wait(time)
    if game.CoreGui:FindFirstChild("screen") then
        game.CoreGui["screen"]:Destroy()
    end
    if game.CoreGui:FindFirstChild("Notifications") then
        game.CoreGui["Notifications"]:Destroy()
    end
    if game.CoreGui:FindFirstChild("watermark") then
        game.CoreGui["watermark"]:Destroy()
    end
end

checkUIS(1)

if game.PlaceId == 5827078246 then
    
    -- Variables -- 
    local executer = identifyexecutor()
    local LocalName = game.Players.LocalPlayer.Name
    local MarketplaceService = game:GetService("MarketplaceService")
    local gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
    -- Variables --
local function rprint(color, msg) 
rconsoleprint("@@"..color.."@@")
rconsoleprint(msg)
end

do
rconsolename("Pickle Hub Console")
rconsoleclear()
rprint("MAGENTA",[[
            8888888b.  d8b          888      888              888    888          888      
            888   Y88b Y8P          888      888              888    888          888      
            888    888              888      888              888    888          888      
            888   d88P 888  .d8888b 888  888 888  .d88b.      8888888888 888  888 88888b.  
            8888888P"  888 d88P"    888 .88P 888 d8P  Y8b     888    888 888  888 888 "88b 
            888        888 888      888888K  888 88888888     888    888 888  888 888  888 
            888        888 Y88b.    888 "88b 888 Y8b.         888    888 Y88b 888 888 d88P 
            888        888  "Y8888P 888  888 888  "Y8888      888    888  "Y88888 88888P"  
]])

rconsoleprint("@@MAGENTA@@")   
rprint("WHITE", "\n\n")
rprint("WHITE", string.format("                                 Hello! %s Welcome to Pickle Hub.\n\n", LocalName))
rprint("WHITE", "                                     Discord Server: https://discord.gg/gshvsmp8vY\n\n")
rprint("WHITE", "                                             Owner: 5picklebarry#6085\n\n")
rprint("WHITE", string.format("                                             Your Executer: %s\n\n", executer))
rprint("WHITE", string.format("                                   Game Name : %s\n\n", gameName))
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Consistt/Ui/main/UnLeaked"))()


library.rank = "developer"
local Wm = library:Watermark("xsx example | v" .. library.version ..  " | " .. library:GetUsername() .. " | rank: " .. library.rank)
local FpsWm = Wm:AddWatermark("fps: " .. library.fps)
coroutine.wrap(function()
    while wait(.75) do
        FpsWm:Text("fps: " .. library.fps)
    end
end)()


local Notif = library:InitNotifications()

local LoadingXSX = Notif:Notify("Loading Pickle Hub, please be patient.", 5, "information") 

library.title = "Pickle Hub " .. gameName

library:Introduction()
wait(1)
local Init = library:Init()

local MainT = Init:NewTab("Main")
local BuyT = Init:NewTab("AutoBuy")
local EggT = Init:NewTab("AutoEgg")
local MiscT = Init:NewTab("Misc")
local CreditsT = Init:NewTab("Credits")
local SettingsT = Init:NewTab("Settings")

local FarmingSection = MainT:NewSection("FarmingðŸ¤¤")

local AutoFarm = MainT:NewToggle("AutoCoins/Level Farm", false, function(F)
    local vers = F and "on" or "off"
    getgenv().AutoCoin = F
                while true do
                    if not getgenv().AutoCoin then
                        return
                    end
                    wait()
                    local args = {[1] = 3}
                    game:GetService("ReplicatedStorage").CoinToPlayer:FireServer(unpack(args))
                end
end)

local AutoFarm2 = MainT:NewToggle("Best AutoCoin, Needs a Cosmos.", false, function(C)
    local vers = C and "on" or "off"
getgenv().AutoCoinB = C
                while true do
                    if not getgenv().AutoCoinB then
                        return
                    end
                    wait()
                    local args = {
                        [1] = "Cosmos",
                        [2] = {[1] = math.huge, [2] = math.huge, [3] = math.huge, [4] = math.huge}
                    }
                    game:GetService("ReplicatedStorage").Remotes.Skill:FireServer(unpack(args))
                end
end)

local AutoSell = MainT:NewToggle("AutoSell", false, function(S)
    local vers = S and "on" or "off"
                getgenv().AutoSell = S
                while true do
                    if not getgenv().AutoSell then
                        return
                    end
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.Sell:FireServer()
                end
end)

local BuySection = BuyT:NewSection("AutoBuysðŸ¤‘")

local AutoThunder = BuyT:NewToggle("AutoBuy Thunder", false, function(T)
    local vers = T and "on" or "off"
                getgenv().AutoThunder = T
                while true do
                    if not getgenv().AutoThunder then
                        return
                    end
                    wait()
                    local args = {[1] = "Thunder"}
                    game:GetService("ReplicatedStorage").Remotes.BuyAllSkills:InvokeServer(unpack(args))
                end
end)

local AutoCosmos = BuyT:NewToggle("AutoBuy Cosmos", false, function(A)
    local vers = T and "on" or "off"
                getgenv().AutoCosmos = A
                while true do
                    if not getgenv().AutoCosmos then
                        return
                    end
                    wait(0)
                    local args = {[1] = "Cosmos"}
                    game:GetService("ReplicatedStorage").Remotes.BuyAllSkills:InvokeServer(unpack(args))
                end
end)

local AutoSpeed = BuyT:NewToggle("AutoBuy Speed", false, function(P)
    local vers = P and "on" or "off"
                getgenv().AutoSpeed = P
                while true do
                    if not getgenv().AutoSpeed then
                        return
                    end
                    wait()
                    local args = {[1] = "Speed"}
                    game:GetService("ReplicatedStorage").Remotes.BuyAllSkills:InvokeServer(unpack(args))
                end
end)

local AutoBackPack = BuyT:NewToggle("AutoBuy BackPack", false, function(B)
    local vers = B and "on" or "off"
                getgenv().AutoBackPack = B
                while true do
                    if not getgenv().AutoBackPack then
                        return
                    end
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.BuyAllBackpacks:InvokeServer()
                end
end)

local AutoRank = BuyT:NewToggle("AutoBuy Rank", false, function(R)
    local vers = R and "on" or "off"
                getgenv().AutoRank = R
                while true do
                    if not getgenv().AutoRank then
                        return
                    end
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.Rank:InvokeServer()
                end
end)

local BuySectionEnd = BuyT:NewSection("End Game AutoBuyðŸ¤‘")

local AutoTwister = BuyT:NewToggle("AutoBuy Twister", false, function(T)
    local vers = T and "on" or "off"
                getgenv().AutoTwister = T
                while true do
                    if not getgenv().AutoTwister then
                        return
                    end
                    wait()
                    local args = {[1] = "Twister"}
                    game:GetService("ReplicatedStorage").Remotes.BuyAllSkills:InvokeServer(unpack(args))
                end
end)

local AutoTremor = BuyT:NewToggle("AutoBuy Tremor", false, function(E)
    local vers = E and "on" or "off"
                getgenv().AutoTremor = E
                while true do
                    if not getgenv().AutoTremor then
                        return
                    end
                    wait()
                    local args = {[1] = "Tremor"}
                    game:GetService("ReplicatedStorage").Remotes.BuyAllSkills:InvokeServer(unpack(args))
                end
end)

local AutoSummoner = BuyT:NewToggle("AutoBuy Summoner", false, function(U)
    local vers = U and "on" or "off"
                getgenv().AutoSummoner = U
                while true do
                    if not getgenv().AutoSummoner then
                        return
                    end
                    wait()
                    local args = {[1] = "Summoner"}
                    game:GetService("ReplicatedStorage").Remotes.BuyAllSkills:InvokeServer(unpack(args))
                end
end)

local SelectedEgg;

local SelectedEgg

local EggOpen = EggT:NewSelector("Choose egg", "Eggs", {"Chicken Egg", "Unicorn Egg", "Bull Egg", "Dragon Egg", "Alien Egg", "Candy Egg", "Ice Egg", "Master Egg", "Pirate Egg", "Atlantis Egg", "Zombie Egg", "Jurassic Egg", "ToyLand Egg", "Olympus Egg"}, function(Value)
    SelectedEgg = Value
end)

local AutoSummoner = EggT:NewToggle("AutoOpen Selected Egg", false, function(Value)
    while Value do
        wait(0.5)
        if SelectedEgg == "Chicken Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(1)
        elseif SelectedEgg == "Unicorn Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(2)
        elseif SelectedEgg == "Bull Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(3)
        elseif SelectedEgg == "Dragon Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(4)
        elseif SelectedEgg == "Alien Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(5)
        elseif SelectedEgg == "Candy Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(6)
        elseif SelectedEgg == "Ice Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(7)
        elseif SelectedEgg == "Master Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(8)
        elseif SelectedEgg == "Pirate Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(9)
        elseif SelectedEgg == "Atlantis Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(10)
        elseif SelectedEgg == "Zombie Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(11)
        elseif SelectedEgg == "Jurassic Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(12)
        elseif SelectedEgg == "ToyLand Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(13)
        elseif SelectedEgg == "Olympus Egg" then
            game:GetService("ReplicatedStorage").Remotes.BuyPets:InvokeServer(14)
        end
    end
end)

end